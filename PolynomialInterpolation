// Daniel Chan - 2MS3 - Polynomial Interpolation
#include <iostream>

using namespace std;;

void coef(int n, double x[4], double y[4], double a[4]);
double eval(int n, double x[4], double a[4], double t);

int main()
{
    int n = 4;
    double x[4] = { 0, 1, 4, 6 };
    double y[4] = { 2, 28, 8, 140 };
    double* a;
    a = new double[4];
    double t = 3.1;

    coef(n, x, y, a);

    cout << "The value at " << t << " is " << eval(n, x, a, t);
}

void coef(int n, double x[4], double y[4], double a[4])
{
    for (int i = 0; i < n; i++)
    {
        a[i] = y[i];
    }

    for (int j = 1; j < n; j++)
    {
        for (int i = n; i > j; i--)
        {
            a[i] = (a[i] - a[i - 1]) / (x[i] - x[i - j]);
        }
    }
}

double eval(int n, double x[4], double a[4], double t)
{
    double temp = a[n];
    for (int i = n - 2; i >= 0; i--)
    {
        temp = ((temp) * (t - x[i])) + a[i];
    }
    return temp;
}
